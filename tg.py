from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext
import psycopg2 
TOKEN = "7986810100:AAF-4hKkmVTKqYzyk_DX9ZH6Qz4K1rUSp1M"
DATABASE_URL = "postgresql://postgres:22112005@localhost/exam_platform"


async def start(update: Update, context: CallbackContext):
    await update.message.reply_text(
        "–°”ô–ª–µ–º! –ë“±–ª Exam Platform –±–æ—Ç. “ö–æ–ª –∂–µ—Ç—ñ–º–¥—ñ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä:\n"
        "/student_results <–ò–ò–ù> - –ë–µ–ª–≥—ñ–ª—ñ —Å—Ç—É–¥–µ–Ω—Ç—Ç—ñ“£ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ–Ω –∫”©—Ä—É"
    )


async def student_results(update: Update, context: CallbackContext):
    if not context.args:
        await update.message.reply_text("–ò–ò–ù –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: /student_results <–ò–ò–ù>")
        return

    iin = context.args[0]

    try:
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()

        cursor.execute("""
            SELECT students.first_name, students.last_name, tests.title, results.score
            FROM results
            JOIN students ON results.student_id = students.id
            JOIN tests ON results.test_id = tests.id
            WHERE students.iin = %s
            ORDER BY results.score DESC;
        """, (iin,))
        results = cursor.fetchall()

        if results:
            response = f"üìä *–ò–ò–ù {iin} –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ:*\n\n"
            for row in results:
                response += f"üìù {row[2]}: {row[3]} “±–ø–∞–π\n"
        else:
            response = f"–°—Ç—É–¥–µ–Ω—Ç—Ç—ñ“£ –ò–ò–ù {iin} –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ —Ç–∞–±—ã–ª“ì–∞–Ω –∂–æ“õ."

    except Exception as e:
        response = f"“ö–∞—Ç–µ: {str(e)}"
    finally:
        if 'cursor' in locals():
            cursor.close()
        if 'conn' in locals():
            conn.close()

    await update.message.reply_text(response, parse_mode="Markdown")


def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("student_results", student_results))

    print("–ë–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!")
    app.run_polling()


if __name__ == '__main__':
    main()
